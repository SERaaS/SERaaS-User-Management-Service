swagger: "2.0"
info:
  version: "0.0.1"
  title: User Management Service
# during dev, should point to your local machine
host: localhost:4000
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
# complex objects have schema definitions
definitions:
  ErrorResponse:
    required:
      - errorCode
      - message
    properties:
      errorCode:
        type: number
      message:
        type: string
  UserAuthenticationResponse:
    required:
      - _id
      - name
      - dateCreated
      - lastUsed
    properties:
      _id:
        type: string
      name:
        type: string
      dateCreated:
        type: string
        format: date-time
      lastUsed:
        type: string
        format: date-time
  UserAuthenticationRequest:
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string
        format: password
  UserValidationResponse:
    required:
      - userExists
    properties:
      userExists:
        type: boolean
  EmotionStatisticObject:
    required:
      - emotion
      - probability
    properties:
      emotion:
        type: string
      probability:
        type: number
  # Both request and response for SERaaS Timestamps are similar as the required attributes are different
  SERaaSTimestampRequest:
    required:
      - fileName
      - output
    properties:
      fileName:
        type: string
      paramEmotionsAvailable:
        type: array
        items:
          type: string
      paramPeriodicQuery:
        type: number
      output:
        type: array
        items:
          $ref: "#/definitions/EmotionStatisticObject"
  SERaaSTimestampResponse:
    required:
      - userId
      - fileName
      - dateCreated
    properties:
      userId:
        type: string
      fileName:
        type: string
      dateCreated:
        type: string
        format: date-time
      paramEmotionsAvailable:
        type: array
        items:
          type: string
      paramPeriodicQuery:
        type: number
      output:
        type: array
        items:
          $ref: "#/definitions/EmotionStatisticObject"
  SERaaSTimestampList:
    type: array
    items:
      type: string
  SERaaSFlushOutput:
    required:
      - removedTimestamps
    properties:
      removedTimestamps:
        type: number
paths:
  /swagger:
    x-swagger-pipe: swagger_raw
  /authentication/register:
    x-swagger-router-controller: authentication
    post:
      description: Registers a user account based on the given credentials
      operationId: register
      parameters:
        - in: body
          name: user
          description: The username and password of the account to register
          required: true
          schema:
            $ref: "#/definitions/UserAuthenticationRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserAuthenticationResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /authentication/login:
    x-swagger-router-controller: authentication
    post:
      description: Authenticates the given user credentials
      operationId: login
      parameters:
        - in: body
          name: user
          description: The username and password of the account to authenticate
          required: true
          schema:
            $ref: "#/definitions/UserAuthenticationRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserAuthenticationResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /authentication/validate/{userId}:
    x-swagger-router-controller: authentication
    get:
      description: Validates if the given user ID is associated with a registered account
      operationId: validateUserId
      parameters:
        - in: path
          name: userId
          description: The user ID to validate
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserValidationResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /authentication/data/{userId}:
    x-swagger-router-controller: timestamp
    get:
      description: Gets the list of SERaaS API Timestamps associated with the given user
      operationId: listTimestamps
      parameters:
        - in: path
          name: userId
          description: The user ID of the user to associate data with
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SERaaSTimestampList"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Send SERaaS API call data upon usage and associate it with the given user as a Timestamp object
      operationId: sendTimestamp
      parameters:
        - in: path
          name: userId
          description: The user ID of the user to associate data with
          required: true
          type: string
        - in: body
          name: data
          description: The SERaaS API call data to be stored to the user
          required: true
          schema:
            $ref: "#/definitions/SERaaSTimestampRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SERaaSTimestampResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /authentication/data/{userId}/{queryId}:
    x-swagger-router-controller: timestamp
    get:
      description: |
        Loads all the data related to the given SERaaS API 
        call (Timestamp) associated with the given user
      operationId: loadTimestamp
      parameters:
        - in: path
          name: userId
          description: The user ID of the user to associate data with
          required: true
          type: string
        - in: path
          name: queryId
          description: The ID of the Timestamp to load
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SERaaSTimestampResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /authentication/flushdata/{secretKey}:
    x-swagger-router-controller: timestamp
    get:
      description: |
        Removes all of the SERaaS API calls (Timestamps) that are 
        more than 24 hours old from the database
      operationId: flushTimestamps
      parameters:
        - in: path
          name: secretKey
          description: The secret key provided in the API to use this endpoint
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SERaaSFlushOutput"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"